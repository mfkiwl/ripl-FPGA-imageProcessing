actor fold() int In1 , int In2, int In3 ==> int Out1, int Out2, int Out3 :

int img1[512][512][3];
ing arr[256][256][256];
int count_img1 := 0;
consume_img1: action In1:[x1], In1:[x2], In3:[x3] ==> :
guard count_img1 < (512*512*3)
img1[count_img1 / 512][count_img1 mod 512][1] = x1;
img1[count_img1 / 512][count_img1 mod 512][2] = x2;
img1[count_img1 / 512][count_img1 mod 512][3] = x3;
count_img1 := count_img1 + 1;
end

fold: action ==> :
      for (int x1 = 0; x1 < 512 ; x1++) {
        for (int x2 = 0; x2 < 512 ; x2++) {
          /* templated code */
          r = img1[x1][x2][0];
          g = img1[x1][x2][1];
          b = img1[x1][x2][2];

          /* user defined code */
          arr[r][g][b] = arr[r][g][b] + 1;
        }
      }
end

output_featureSpace: action ==> Out1:[featureSpace_x1_count]

end